{
	"info": {
		"_postman_id": "3b372155-a13b-459c-aede-7b43f65fb867",
		"name": "TestingCreateBooking(End_to_End)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30916135",
		"_collection_link": "https://orange-meadow-238397.postman.co/workspace/RESTfulBooker~ea1eac14-5531-4196-a55f-01143136bc21/collection/30916135-3b372155-a13b-459c-aede-7b43f65fb867?action=share&source=collection_link&creator=30916135"
	},
	"item": [
		{
			"name": "Create token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// set globale vairable with token value to use it at PUT,DELETE methods \r",
							"pm.collectionVariables.set(\"token\",pm.response.json().token);\r",
							"\r",
							"// check that Status Code is 200 and Token is created successfully \r",
							"pm.test(\"Token Created Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// set Varaible with bookingid value \r",
							"pm.collectionVariables.set(\"bookingid\",pm.response.json().bookingid);\r",
							"\r",
							"// check that Status Code is 200 and Booking is created successfully \r",
							"pm.test(\"Booking Created Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"//Check Response Time is less than 200ms\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"//Check for specific key \r",
							"pm.test(\"Check for firstname\", function () {\r",
							"    pm.expect(pm.response.json().booking.firstname).to.be.equals(\"Sarah\");\r",
							"});\r",
							"//check that Response Body is not Null and Written in Json format \r",
							"pm.test(\"Valid Response(Not NULL,JSON format )\", function () {\r",
							"   pm.response.to.be.withBody ;\r",
							"   pm.response.to.be.json ; \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Sarah\",\r\n    \"lastname\" : \"Essam\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Booking after Creating",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if Booking is added to Database by get it with booking id \r",
							"pm.test(\"Verify that The Booking is Created\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//test Status Code\r",
							"pm.test(\"Booking Edited Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"SarahEdited\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Booking after Editing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the Booking is edited\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Bookng",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//if allowed \r",
							"pm.test(\"Deleted Successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Booking after deleting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify That the Booking is deleted Successfuly(NOT Found) \", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/booking/{{bookingid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "bookingid",
			"value": "",
			"type": "string"
		}
	]
}